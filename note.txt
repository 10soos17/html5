======================================HTML5===================================================
0406 ~
최주정
https://cafe.naver.com/ceois?iframe_url=/MyCafeIntro.nhn%3Fclubid=29556559
ideakorea@naver.com
입찰달인최부장

0415 ~
이경복
https://blog.daum.net/celab
===========================tip===========================================================
-자격증
    sqld

-youtb
    혼자공부하는 자바, 이것이 자바다 한빛미디어
    JSP Ajax 회원가입 기능 구현하기 1강 - 프로젝트 소개 및 회원가입 화면 디자인
    김학성의 초급 알고리즘
-블로그
    css형광펜효과
-호스팅사이트
    https://www.dothome.co.kr/
    https://www.cafe24.com/
===========================visual studio code==================================================
*visual studio code tip
-글꼴설치(p.43) : https://github.com/naver/d2codingfont/blob/master/D2Coding-Ver1.3.2-20180524.zip -> download -> 
                        vs code > file > preferences > settings > font 설정
-단축키
    html5 표준자동세팅: !+enter
    주석: ctrl / (맥: command /)
    줄맞춤: ctrl + a, ctrl + kf
    옮기기: alt + 위아래키

-emmet 기능
    tr*5>td*5{$} : innerHTML에 숫자 자동 증가 생성
    div#id{value} : {}안에 넣은 값을 innerHTML에 생성 -> <div id="id">value</div>
    div#id[value] : []안에 넣은 값을 태그의 요소로 생성 -> <div id="id" value=""></div>
    h1.#beta : <h1 class="" id="beta"></h1> 자동 써짐
    div*5{div 태그 block 형식}
    #id :  <div id="id"></div>
    .class : <div class="class"></div>


-extension:
    install live server by Ritwick Dey -> port, 수정 바로 확인 가능
    install Bracket Pair Colorizer by CoenraadS 
    install Material Icon Theme by Philipp Kief by Jun Han -> 태그 변경시, 닫힘도 자동 바뀜
    install Prettier by Prettier Code formatter -> 자동 수정 설치 후,settings.json < .editorconfig < .prettierrc(https://uxgjs.tistory.com/150)
        ex. "prettier.useEditorConfig": true,
            "editor.formatOnSave": true,
            "editor.formatOnPaste": true,
            "editor.formatOnType": true,
            "[javascript]": {
                "editor.defaultFormatter": "esbenp.prettier-vscode"
            },
            "[html]": {
                "editor.defaultFormatter": "vscode.html-language-features"
            },
            "[css]": {
                "editor.defaultFormatter": "esbenp.prettier-vscode"
            }

===========================크롬 tip=======================================================
개발자도구: f12
===========================이론===========================================================
-html java jsp spring
-ajax : 서버 부하 없이 asyncronous 작동하게함
-javascript = ECMAScript

-MVC(model view control)
-404 error: 파일 못 찾을 때
-xml
-annotation @

===========================html5===========================================================
prompt();

-특수문자 사용할때 
    (https://mine-it-record.tistory.com/273)
    &lt; <
    &gt; >
    (http://kor.pe.kr/util/4/charmap2.htm)
    &#38 -> &

-meta tag
    추가정보, 검색 시
    "UTF-8" 3byte전송
    "euc-kr"
    viewport: mobile에서도 보이도록 함

-
    <link rel="stylesheet" href="style.css"> css 
    <script src="main.js"></script> js 
    <script src="./js/2js(dom_fault).js" defer></script> //html 문서 뜰때까지 지연

-무작위 텍스트 쓸때
    lorem5(5개단어)
    lorem*5(5줄)

-copyright tag:  &copy; &#169;

-mailto

-path
    <img src="img/a.png" alt="그림이 없음" width="400px">
    <img src="../b.png" alt="그림이 없음" width="400px">

-table 기본구조
    tip. table>tr*6>td*6{$} 번호 부여한 후, colspan, rowspan 합치기

    ex. table>thead>tr>th*6
        tbody>tr>td*6
    ex.
    <table border="1px">
            <thead>
                <tr>
                    <th>번호</th>
                    <td>제목</td>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>1</td>
                    <td><a href="https://www.naver.com" target="_blank">네이버뉴스</a></td>
                    <td>good</td>
                </tr>
            </tbody>
        </table>
    TR: table row
    TH: table heading(auto bold, center)
    TD: table data
    border="1" cellspacing="0" 
    colspan="5" rowspan="5" align="center"

-form
    <form method="post" action="test1action.jsp">
    get방식 -> http://127.0.0.1:5500/0407/test1.html?id=soo&pw=123
    post방식 -> body에 보냄, url 노출 안됨
    target="_blank" -> 링크를 새창으로 띄움
    메소드 적용시키려면 obj에 name값 지정해야함

    -form에서 button, submit 차이(button은 form method적용안됨)
        <td colspan="2" align="center">
            <input type="button" value="confirm" onclick="checkForm();">&nbsp;
            <input type="submit" value="cancel" onclick="checkForm();">
        </td>

    -name역할
        ex. test3.html

        function checkForm(){
            if(document.forms.name.value == ""){
                alert("이름을 입력하세요.");
                document.forms.name.focus();
                return false;
            }else if(document.forms.subject.value == ""){
                alert("제목을 입력하세요.");
                document.forms.subject.focus();
                return false;
            }
        }
        <form name="forms">
            <fieldset>
                <table>
                    <tr>
                        <td>
                        <input type="text" id="name" name="name"
                            placeholder="이름 입력" autofocus required>
                        </td>
                            ...
                    </tr>
                </table>
            </fieldset>

    -for역할
        label obj 클릭시 id 값이 "id"인 obj를 가리킴
        <td><label for="id">ID</label></td>
        <td><input type="text" class="id color" id="id" name="id" 
            placeholder="input ID" maxlength="20" size="10"
            autofocus required></td>

-<HR> horizontal
-<BR> break
-영역구분
    <div></div> 영역 구분
    <span></span> 본인 영역만 적용됨

-<p> 문단 
-<pre> 글자 위치 적용
-<a> 하이퍼링크
    새창으로 띄우기 target="_blank"
    자기창에 띄우기 target="_self"

-<del>네이버</del><ins>최신</ins><sup>뉴스</sup>

-목록
    <ul>, <ol>, <li>
    <ul style="list-style-type:circle">
    <ol start="50">

-<marquee behavior="alternate" direction="" loop="" bgcolor="" width="100px">과일 목록</marquee> -> 글자 움직임

-select
    <select>
        <optgroup label="subject for Web">
            <option>CSS</option>
            <option selected>Oracle</option>
        </optgroup>
    </select>

-textarea
    내용 입력시
    <textarea cols="30" rows="5" id="contents" name="contents"
    placeholder="내용 입력" required></textarea>


===========================css============================================================
-id, class, name값
    id가 가장 우선
    
-디자인하기 전에 기본 마진, 패딩 없애주는 것이 좋음
    *{
        margin:0;
        padding:0;
        list-style:none;
        text-decoration: none;
        color:inherit;
        box-sizing: border-box; (자동으로 패딩 값 고려해서 처리해줌)
    }

-좌표(position:, z-index:)
    절대: absolute(좌표(0,0)으로 생성),fixed;(특정 좌표에 고정)
    상대: relative, static;

    z-index: 숫자 클수록 앞에 위치함

    부모, 자식 관계에서 절대, 상대 위치 잘 잡는 것이 중요함.(ex. 0409_test8.html)
    ex. 자식에게 absolute 키워드 주려면,
         부모에 width, height 속성, relative 키워드 줘야함.

-단위
    vh:브라우저 크기를 우선순위
    %
    px

-특정태그 전, 후 지정 (::after)
    section::after{
        content: "";
        display: table;
        clear: both;
    }
-overflow 옵션
    hidden(clear:both 와 유사), scroll

-img url
    body{
        background-image: url('../abc.jpeg');
    }

-font
    body{
        font-family: Impact, Haettenschweiler, 'Arial Narrow Bold', sans-serif;
        font-size:;
        font-style:;
        font-weight:;
     }

-수직정렬
line-height: 100px;(높이만큼)

-display: flex; // block;, inline;, inline-block;
-justify-content: center; /*전체 컨텐츠를 가운데로*/ ,flex-start; flex-end; space-around; space-between;
-color:inherit;
-단위: %, em(배수), px
-hover
    마우스 올리면
    input:hover, textarea:hover {
        background-color: chartreuse;
        text-decoration: underline;
    }

-active
    마우스 클릭하면
    input:active{
        background-color: rgb(183, 106, 255, 0.5);
    }

-list 타입 없애줌
    li{ 
        list-style-type: none;
    }

-margin(auto는 중앙정렬과 유사)
    margin: 0 0 0 0; 위 아래 우 좌
    margin: 0 0; 위아래 우좌
    margin: 0 auto;

-box-sizing: border-box;
    border 제외하고 박스 사이즈 자동 맞춰줌
    *{
        box-sizing: border-box;
    }

-float
    .section1{
        float: left;
    }

-clear(overflow: hidden 과 유사)
    Do not allow floating elements on the left or the right side
    .footer{
        clear: both; // none|left|right|both|initial|inherit;
    }

-속성 우선 적용해야할 때(!important)(자주쓰지말것)
.a{
    color: yellowgreen !important;
}

-글자 앞이나 뒤에 특정 글씨나 컨텐츠 넣을때
(선택자::after(or before), 속성content)
        .a h1::after{
            content:"";
            display: inline-block;
            height:20px;
            width:20px;
            background-color: black;
        }
        .b h1::before{
            content:"$"
        }

-선택자 선택하는 법(child  etc)
        h1:first-child{
            color:orangered
        }
        h1:last-child{
            color:rgb(147, 206, 147);
        }
        h1:nth-child(2n+1){
            color:indigo;
        }

        a[target=_blank]{
            background: brown;
        }
        a[target=_self]{
            background: greenyellow;
        }

        ex. hanbit_src > chapter 5 >etc_structureFalse & True 체크
        li > a:first-child { color: red; }
        li:first-child > a { color: red; }


-자손선택자 유의점
    아래 적용안되는 원인(개발자도구로 확인해보면  table > tbody > tr > th)

        table > tr > th{
            color: red;
        }

-scroll option
    https://circlash.tistory.com/610

===========================media query=====================================================
-767 / 768-959 / 960
-장치에 따라 설정 달리 하기 위한 용도
-메뉴 구성 차이 요인(상하좌우)
    float 속성 값 & HTML 태그의 순서

-meta tag
    -검색 엔진이 검색되게 함
        <meta name="title" content="html5 programming">
        <meta name="description" content="html5 programming">
    -모바일 화면
        <meta name="viewport" content="width=device-width, user-scalable=no, initial-scale=1.0,
        maximum-scale=1.0, minimum-scale=1.0">

-쓰는 법
    -@rule
        @media screen and (max-width:767px){
            body{
                background: red;
            }
        }
        @media print{
            body{
                background: green;
            }
        }
    -link태그
        <link rel="stylesheet" href="./file.css" media="screen">

-연산자, 접두사
    only, not, and
    max, min

-orientation(장치방향)
    세로: @media(orientation:portrait)
    가로: @media(orientation:landscape)


===========================jquery==============================================================

-비교

    - 이벤트로드
        window.onload() = function(){};
        $(document).ready(function(){});

    - 텍스트 추출
        innerHTML, textContent
        html() - 처음 1개 출력, text() - 글자로 모두 출력

    - css 속성 값 읽기
        .style.속성 - 속성명 '-'사용 불가 / .style['속성'] - 속성명 '-'사용 가능
        .css( , )

    - css 속성 값 추출
        .속성(웹표준일경우) / getAttribute(웹 표준 아닐 경우)
        attr()

    - css 속성 값 지정
        .속성(웹표준일경우) / setAttribute(웹 표준 아닐 경우)
        attr( , )

    -기본 태그 속성 없애는 법
        결과 false 로
        .preventDefault(), .stopPropagation()

- jquery hover action  
    $('').hover(mouseenter이벤트, mouseleave이벤트)

- $('').method(function(e){});

-on(연결), off(제거)

===========================js==============================================================
int, float, char, boolean, string

var let const 
this
instanceof 
typeof
true false
null
new 
delete  
function class
return 
in 
with

if else 
for while do
break continue 
case switch
try catch finally defalut throw

-식별자
    특수문자는 _, $만 사용 가능
    숫자로 시작 안됨

- i++(후위(postfix) 연산자) vs ++i(전위(prefix) 연산자)
    j = i++; // i값을 j에 할당 후,연산
    j = ++i; // 연산 후, i값을 j에 할당

- = == ===
    = assignment operator
    == comparison operator
    === both values and data types are the same.

-수 변환
    Number(sum / 3); parseInt(sum / 3); parseFlaot(sum / 3);
    Math.round(sum / 3); Math.ceil(sum / 3); Math.floor(sum / 3);
    (sum / 3).toExponential(3);
    (sum / 3).toPrecision(3);
    지수표기법, 유효숫자표기법
    (http://mwultong.blogspot.com/2005/12/c-scientific-notation.html)

-var vs let vs const 
(https://medium.com/@yeon22/javascript-var-let-const%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90-9fab5c264c9c)

선언 시,
var, let은 변수 선언시 초기 값을 주지 않아도 되지만 
const는 반드시 초기값을 할당.

hoisting할 때, 
var는 값이 할당되어있지 않으면 undefined 값을 넣음 -> 따라서 할당 전 사용해도 에러 안남
let, const는 자동으로 초기값 할당하지 않음. -> 따라서 할당 전 사용하면 error
(cf. 변수가 선언되고 해당 변수에 값이 할당되기 전까지를 TDZ)

함수 밖 선언 후,
함수 내에서 재선언 : 둘다 가능하나 함수 밖 변수와 별개
함수 내에서 재할당 : 둘 다 가능
함수 밖 재선언 : var 만 가능

ex1.
    var d = 1;
    let e =1;
    function test(){
        var d = 2;
        let e = 2;
        console.log(d,e); //2,2
    }
    test();
    console.log(d,e); //1,1

ex2.
    var d = 1;
    let e =1;
    function test(){
        d= 2;
        e=2;
        console.log(d,e); //2,2
    }
    test();
    console.log(d,e);//2,2

ex3.
    var d = 1;
    let e =1;
    function test(){
        var d= 2;
        let e=2;
        console.log(d,e); //2,2
    }
    test();
    var d= 3;
    let e=3; //error
    console.log(d,e);
    
    -선언함수와 익명함수
        js는 선언함수를 먼저 읽음

-3중 for문
(https://sungwooki.tistory.com/entry/4%EC%9D%BC-%EC%B0%A8-JAVA-for%EB%AC%B8%EC%9C%BC%EB%A1%9C-3%EB%8B%A83%EB%8B%A8-%EA%B5%AC%EA%B5%AC%EB%8B%A8-%EB%A7%8C%EB%93%A4%EA%B8%B0-3%EC%A4%91-for%EB%AC%B8-%ED%95%98%EB%8B%A8%EC%9C%BC%EB%A1%9C-1%EC%94%A9-%EC%A6%9D%EA%B0%80%ED%95%98%EB%A9%B0-9%EB%8B%A8%EA%B9%8C%EC%A7%80-%EC%A6%9D%EA%B0%80)
    가로 3중 범위
    세로 2중 범위
    전체 세로 1중 범위

-eval()
    문자로 표현 된 JavaScript 코드를 실행하는 함수
==============================================================================================
===========================oracle=============================================================
==============================================================================================

---------------------------환경 만들기
- 맥
    설치 방법1: https://blog.naver.com/ahahw/221805861698
                https://whitepaek.tistory.com/38
                https://whitepaek.tistory.com/40

    설치 방법2: https://namubada.net/282?category=773787

- 윈도우
    - 다운로드 : https://www.oracle.com/database/technologies/xe-prior-releases.html
        
    - 도커 설치
        [windows 설치 -docker]
        https://blog.naver.com/jazzkim12/222040523447
        1설치 전, 작업관리자에서 가상화 활성화 여부 확인하기
            제어판>프로그램 및 기능>windows 기능 켜기/끄기
            : hyper-v 관리도구 전부 체크해두기, 가상 머신 플랫폼도 체크하기
        2도커사이트에서 윈도우 버전 설치
            https://docs.docker.com/toolbox/toolbox_install_windows/
            https://docs.docker.com/docker-for-windows/install/#download-docker-for-windows
        3에러 발생시 시도
            Cmd에서
            DISM /Online /Enable-Feature /All /FeatureName:Microsoft-Hyper-V
            -> bcdedit /set hypervisorlaunchtype auto 로 변경
- sqldeveloper 설치
    - 맥 
        다운로드 : https://www.oracle.com/tools/downloads/sqldev-downloads.html
        설치 방법 : https://blog.naver.com/wkdgpwjd007/222271070913

        -접속 오류시
            cd /Users/soos/Desktop/SQLDeveloper.app/Contents/Resources/sqldeveloper/sqldeveloper/bin
            vi sqldeveloper.conf 
            -> 아래 두 줄 추가
                AddVMOption -Duser.language=ko
                AddVMOption -Duser.country=KR

- characterset 확인
    AL32UTF8 권장
    http://dmbadi.blogspot.com/2017/07/change-database-character-set-in-oracle_28.html
    select * from nls_database_parameters where parameter='NLS_CHARACTERSET';

----------------------------[DOCKER & oracle-xe-11g]----------------------------------------------------
1.도커 환경 만들기

    docker search 원하는이미지이름 (도커에서 오라클 이미지 찾기)
    (docker search oracle-xe-11g )
    docker pull 이미지이름(결과 중에 하나 pull)
    (docker pull oracle-xe-11g)
    docker images(잘 받아졌나 확인)
    docker run —name 새이름 -d -p hostport:hostport -p oracleport:oracleport 이미지이름
    (docker run --name oracle11g -d -p 8080:8080 -p 1521:1521 jaspeen/oracle-xe-11g;)

    *** 디렉터리 복사할때
    docker run —name 새이름 -d -p 내포트:내포트 -p 오라클포트:오라클포트 -v 복사할로컬디렉토리경로:옮길컨테이너디렉터리 이미지이름
    (docker run --name oracle -d -p 9999:9999 -p 1521:1521 -v //Users/soos/Desktop/git/lecture/lecture_choongang/3_oracle/2_source:/tmp soo1017/oracle11g;)
    C:\Users\user\Desktop\choongang\3_oracle\2_source
    docker run --name oracle11 -d -p 9999:9999 -p 1521:1521 -v C:\Users\user\Desktop\choongang\3_oracle\2_source:\tmp soo1017/oracle11g;

    docker ps(컨테이너에 올라갔는지 확인)
    docker exec -it 이름 sqlplus(sqlplus 실행)
    (docker exec -it oracle11g sqlplus)
    docker exec -it 이름 bin/bash(bash 실행)
    (docker exec -it oracle11g bin/bash)

    ***
    docker pull 내계정/원하는이름;
    docker commit 이름 내계정/원하는이름;
    docker push 내계정/원하는이름;
            
2 linux 환경 만들기
    (exec -it 컨이너이름 /bin/bash)

    (
    루트계정 비번 설정->
    apt-get패키지받기(vi, sudo, yum)->
    사용자 추가->
    사용자한테 권한 주기(sudoers파일에 작성)->
    한글설정
    )

    #표시: root 계정 / $표시: 타계정 / su 계정명(계정 바꾸기)

    passwd(#상태에서 루트비번설정)

    apt-get update
    apt-get upgrade
    apt-get install vim
    apt-get install sudo

    adduser 계정명
    cd /etc (sudoers 위치로 이동)
    chmod 777 sudoers(파일 수정 권한 주기)
    vi sudoers -> 계정명 ALL=(ALL:ALL) ALL (추가한 계정에 대한 권한 주기)
    chmod 444 sudoers(파일 읽기 권한만 주기)

    apt-get install locales
    locale
    locale -a
    localedef -f UTF-8 -i ko_KR ko_KR.UTF-8
    LC_ALL=ko_KR.utf8 bash

    (화살표키설정하는법
    체크apt-get install yum
    yum install rlwrap
    .bashrc -> alias sqlplus ='rlwarp sqlplus'
    # . .bashrc
    )

3.sqlplus 환경 만들기

    - 기본 계정
        sys - super user, conn sys /as sysdba, 비번1234
        system
        scott
        hr

    select username, account_status, lock_date from dba_users;(현재 계정 확인)
    create user 계정명 identified by 비번;(계정 생성)
    ( create user soos identified by '비번’;)
    grant connect, resource to 계정명;(계정에 권한)
    (grant connect, resource to soos;)

    alter user 계정명 account unlock;(기존 계정에 권한)
    (alter user hr account unlock;)
    alter user 계정명 identified by 비번(기존 계정에 비번)
    (alter user hr identified by 1234;)

    conn 계정/비번

    *한글세팅
    conn sys /as sysdba
    update NLS_DATABASE_PARAMETERS set parameter='KO16KSC5601' where parameter='NLS_CHARACTERSET'

    select * from tab(기존 테이블 상태 확인)

    @경로 (파일 실행)

    commit;
    rollback;

--------------------------------사용법 

- source 파일 불러올때
    @절대경로;
    ex. @C:\temp\emp_example.sql;

-type  
    VARCHAR2()
    NUMBER()

-option
    null, not null, unique(값이 겹치면 에러남)
    PRIMARY KEY(not null + unique + index) - table당 하나 설정, error(ORA-02449: unique/primary keys in table referenced by foreign keys)
    FK(foreign key) - 미리 설정되어있는 값만 넣어야 함, error(ORA-02291: integrity constraint (HR.FK_DNO) violated - parent key not found)


-명령어
    select * from tab;
    set linesize 100(원하는크기);

    alter user hr(개체) account unlock(권한 언락);
    alter user hr identified by 1234;
    conn hr/1234;

    select * from hr(객체).departments(table이름);
    select department_name(필드명) from hr.departments;
    desc departments; - 테이블 구조 학인

    create table tbluser (bunho number(3), name varchar2(20) not null, password varchar2(20) not null);
    insert into tbluser values(1, 'hong gil dong', '1234');
    update tbluser set name='lee sun min' where bunho=1;
    delete from tbluser where bunho =1;

    select * from tbluser order by bunho (desc); -> ex. desc 옵션 - lifo 형식으로 게시판 만들어야할 때 사용
    select * from sungjuk where kor >= 100;

    select avg(kor) from sungjuk;

    select bunho, name, kor+eng+math from sungjuk;
    select bunho, name, kor+eng+math (as) sum, (kor+eng+math)/3 (as) avg from sungjuk

    select * from sungjuk where name like '%k%'; - k자가 들어간 name 모두 선택

    column clusterid format a5;

    drop table CUSTOMER;

- 명령어 종류
    dml(data manupulate language)-select insert update delete 
    dcl(data control language)-r grant  
    ddl(data define language)-schema를  create alter drop

    taransaction - commit, rollback

- 무결성, database 정규화(normalization)

- cursor, trigger
===========================mysql==================================================================
https://dev.mysql.com/downloads/file/?id=503091

==============================================================================================
===========================java===============================================================
==============================================================================================
- eclipse ide for java developers (2020. 03 설치함)
    -맥 한글깨짐 현상 https://hyo-dadak.tistory.com/32
    Windows의 이클립스 인코딩 설정은 기본적 "MS949" 입니다. 
    맥의 이클립스 인코딩과 비교하여, 동일한 인코딩을 맞추시고 작업하시면 됩니다.
    참고로, "MS949"는 "EUC-KR"의 확장형이기 때문에 서로 호환되며, "ASCII"와 "UTF-8"도 서로 호환됩니다만, "EUC-KR"과 "UTF-8"은 호환되지 않습니다.
    인코딩 설정은 [Preferences] - [General] - [Workspac]에서 변경할 수 있습니다.

- java 설명 https://coffee-mark.tumblr.com/post/60403617223/java?is_related_post=1

- java 객체 문서 https://docs.oracle.com/javase/8/docs/api/java/util/ArrayList.html

- 설치 tip
    - download - https://java.com/ko/download/manual.jsp
                 https://www.oracle.com

    - mac 설명 - https://s2junn.tistory.com/83
    - mac 설치, 삭제 - https://blog.naver.com/adonise007/221556545884

    * eclipse - jdk version 11 이상 사용 권장
    * jdk 8 와의 차이점 - 모듈화, jdk 8은 java SE의 모든 표준 API가 import 만으로 사용가능
                        11 이후 버전은 java.base에 포함된 패키지만 사용 가능.
                        따라서 다른 모듈을 사용하려면 모듈 기술자(module-info.java)에 의존성 모듈을 등록해야 함.
    - 환경변수 등록
        bash 사용시, vi ~/.bashrc
        zsh 사용시, vi ~/.zshrc

        1. 
            export JAVA_HOME = /Library/Java/JavaVirtualMachines/jdk-16.jdk

            or

        2. 여러버전 환경변수 등록
            export JAVA_HOME=$(~/usr/libexec/java_home -v 1.8)
            export PATH="/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/sbin:$JAVA_HOME"
            alias java8='export JAVA_HOME=$(~/usr/libexec/java_home -v 1.8)'
            alias java16='export JAVA_HOME=$(~/usr/libexec/java_home -v 16)'

    - 삭제
        sudo rm -fr /Library/Internet\ Plug-Ins/JavaAppletPlugin.plugin 
        sudo rm -fr /Library/PreferencePanes/JavaControlPanel.prefPane 
        sudo rm -fr ~/Library/Application\ Support/Oracle/Java

- 기본 컴파일 및 실행 과정
    Java compiler 는 .java 파일을 .class 라는 Java byte code 로 변환 시켜줍니다.
    하지만 Byte Code 는 기계어가 아니기 때문에 OS에서 바로 실행 되지 않습니다.
    이 때 JVM(Java Virtual Machine)이 Btyte Code 를 이해할 수 있도록 해석

    소스파일(.java) -> 컴파일(javac) -> 바이트코드(.class) -> 실행(java)

    컴파일 후 실행되기 위해서는 
    반드시 main() 메서드가 존재하여야 하며 
    JVM이 실행하는 범위는 오직 main() 메서드만 가능

    -terminal
        파일명.java (생성)
        javac 파일명.java (컴파일)
        파일명.class (생성) - 바이너리코드(바이트코드)
        java 파일명(실행)

- Java platform(J2SE, J2EE, J2ME)

- JDK
    JRE(JVM+각종API+app배포기술) +  각종개발에 필요한 실행파일(javac.exe))

- JVM(java.exe)

    - 크게 3부분
        - JAVA Source : 사용자가 작성한 JAVA 코드
        - JAVA Compiler　: JAVA 코드를 Byte Code로 변환
        1. Class loader subSystem(클래스 파일을 로딩한 뒤 검증하고 초기화)
        2. Runtime DataArea(클래스 파일을 저장)
            -> (5가지 영역)
                a. method area(=class area, code area, static area)
                    1. field information(멤버변수의 이름, 데이터 타입, 접근 제어자 정보)
                    2. method information(메서드의 이름, 리턴타입, 매개변수, 접근제어자 정보) 
                    3. Type information(Type의 속성이 Class인지 Interface인지의 여부 저장)
                        -Type의 전체이름(패키지명+클래스명)
                        -Type의 Super Class 전체이름(Type이 interface나 object class인 경우 제외)
                        -접근 제어자 및 연관된 interface의 전체 리스트 저장
                    4. 상수 풀(Type에서 사용된 상수를 저장/문자상수, 타입, 필드, Method의 symbolic reference)
                    5. class variable
                    6. class 사용 이전에 메모리 할당(final class 변수는 상수로 치환(상수 풀에 값 복사))
                b. heap area(new 로 생성된 객체, 배열 저장)
                    1. permanent generation(생성된 객체의 주소값 저장)
                    2. new area(eden(객체가 최초 생성되는 공간)/Survivor(Eden에서 참조되는 객체들 저장))
                    3. old area(new area에서 일정시간 이상 참조되는 객체들 저장)
                c. stack area(메서드 호출시 마다 각각의 스택프레임(그 메서드만의 공간) 생성/그 안에서 사용되는 값, 매개변수, 지역변수, 리턴 값 등 임시로 저장/메서드 수행 종료시 프레임별 삭제)
                d. native method stack area(자바 외의 다른 언어에서 제공되는 메서드 저장)
                e. pc registers(Thread가 생성 될 때마다 생성되는 공간/현재 실행되는 부분의 명령과 주소를 저장)
        3. Execution engine(클래스 파일(바이트코드)를 플랫폼에 맞는 기계어로 변환시켜 실행)

    - 하는일
        1. 메모리를 할당
        2. bytecode를 interpreter 형태로 OS에 맞추어 번역, 실행
        3. 변역, 실행 시 최적화 수행 (메모리 관리 Garbage Collection)

- project 작성 기본 틀

    package project1;

    //클래스란? 객체 설명서(Object description)로 이해하기 
    //정의(설명) 준비(생성) 식별(지정) 이용 정리 

    class 학생{
        public void 보드를닦는다() {
            System.out.println("보드를 닦는다");
        }
        public void 바닥을닦는다() {
            System.out.println("바닥을 닦는다");
        }
    }

    public class App {

        public static void main(String[] args) {
            //객체 생성하는 법? 클래스명 참조변수명 = new 클래스명 
            //식별자? 참조변수명
            학생 철수 = new 학생();
            학생 순이 = new 학생();
            철수.바닥을닦는다();
            순이.보드를닦는다();
        }
    }

- 접근 제어
    public(전체공개) > protected(상속 or 패키지 내부) > default(패키지 내부) > private(클래스 내부)
    public 클래스의 경우에는 파일명이 클래스명과 동일하지 않으면 에러가 발생. 
    즉, 외부에서 가져다 쓰는 public 클래스의 경우에는 
    컴파일한 class이름이 동일해야 외부에서 직접 찾아가서 접근할 수 있으므로 당연할 수 밖에 없는 것 같다

- 객체

- super(부모), this(자신)

- 변수 타입
    public, static, final

- 데이터 타입
    byte, short, long, int, float, double, char, boolean, void

- Wrapper(클래스)
    byte, Short, Long, Integer, Float, Double, Character, Boolean, Void

- Wrapper(boxing, unboxing한다고 표현함)
    int를 Integer에 넣으면 Boxing, 다시 Integer를 int로 꺼내오면 UnBoxing
    *Integer와 int는 자동변환 지원됨 
    ex)
    Integer(int value)   // 생성자로 35같은 int를 Integer로 바꾼다.
    Integer(String s)     // 생성자로 “35”같은 String을 Integer로 바꾼다. 
    static int parseInt(String s) // 정적메소드로 “35”같은 String을 정수 int로 바꿔
    static String toString(int i)  // 정적메소드로 35를 “35”로 바꿔준다.
    String toString()  // Integer클래스 안에 담긴 정수(35)를 “35”로 바꾼다.
    int intValue()  // Integer클래스 안에 담긴 정수(35)를 35로 바꾼

- Collection(배열같은 자료구조, 크기 생각 안해도 됨) & Map https://blog.naver.com/blaxh1101/221563857171 , https://blog.naver.com/tatha0346/222220994550
    Collection - List(LinkedList, Stack, Vector, ArrayList), Set(HashSet, SortedSet(TreeSet))
    Map - Hashtable, HashMap, SortedMap(TreeMap)

- generics(<>안에는 클래스타입만 저장 가능)
    ex. ArrayList<String>, ArrayList<Integer>, <String>myMethod(), <Integer>myMethod()

- stream(writer class, reader class)

- override(상속 받은 자가 메소드 재정의, 다중상송 불가), overroading(메소드의 인수만 다르면 새로 정의 가능)

- class, abstract(메소드 이름만 정하고 실제 정의하지 않은 것), interface(상수와 메소드 이름만으로 구성)

- extends(클래스를 상속), implements(인터페이스를 구현)

- 예외 처리(Error, Exception)
    * Error : 실행 중 심각한 오류. 개발자가 코딩할 때 따로 처리할 건 없음
    * Exception : 실행 중 발생가능한 예외 상황. 코딩할 때 예외 처리 방식 정해야함(CheckedException)
                (단, RuntimeException : 실행 중 발생하는 예외이지만, 코딩할 때 처리할 필요는 없음)(UncheckedException)
    
    -> Exception 클래스에 대해서만 개발시에 처리해주면 된다.(RuntimeExcepton 제외)
        Throwable 클래스를 상속하는데, 메소드 중에 다음 2가지가 주로 쓰임.
        * String getMessage()    - 상세 오류 메시지를 제공
        * void printStackTrace()  - 오류발생 시, 메소드 호출 경로가 저장된 스택의 내용을 출력

- 멀티스레드(Thread class, Runnable interface)
    반드시 start() 후에 run()메소드를 호출
    ex.
    Thread t = new MyThread(); 
    t.start();

    ex.
    Runnable r = new MyThread2(); // 스레드에 시킬일이 포함된 runnable구현 클래스 
    Thread t = new Thread(r); // runnable인터페이스를 이용해서 스레드를 만든다. 
    t.start(); // start를 호출해서 스레드에 일을 시키다.

- 동시성 제어
    synchronized
    wait() 메소드, notifyAll() 메소드, notify() 메소드

- package, import
    https://blog.naver.com/jkdmswn02023/221982415880
    - 같은 패키지 - import 필요없음.
    - 다른 패키지
        - 패키지 경로 확인 후, 
            import 경로.*(모든파일), import 경로.클래스명(특정클래스만)

    -이클립스 실습 
        - location : /Users/soos/Desktop/git/lecture/lecture_choongang/eclipse/two/src/two/B.java
        - path : /two/src/two/B.java
        - import two.B;//import two.*; (패키지명만 쓰기)


////////
학원 eclipse encoding  방식 확인하기
vs code, eclipse - 둘다 utf8으로 만들기
