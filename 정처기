**프로그래밍 언어 분류 

1.절차적 언어
  비절차적 언어

    5 select
    1 from
    2 where
    3 group by
    4 having
    6 order by

2. 구조적 프로그래밍 언어
-> 블럭 사용할 수 있는언어: 제어문이나 예외처리 및 함수, 클래스를 이용해서 블럭 단위 코딩과 실행 가능한 언어
-> 블럭 대신에 모듈이라고 표현하기도 함

3. 객체 지향 프로그래밍 언어
-> 클래스의  개념 가진 언어
 
4.스크립트 언어
->코드를 미리 번역(컴파일 - 사람이 알아보는 코드를 기계가 알아볼 수 있도록 번역하는 작업)하지 않고 실행할 때 줄단위로 읽어서 실행하는 언어
->자바스크립트, 파이썬, R, Swift(iOS), ASP.net(C#), JSP(Java), PHP, Ruby 
->문장의 끝에 ;를 할 필요가 없지만 한 줄에 2개의 실행코드가 있는 경우는
2개를 실행할 수 없으므로 ;으로 구분
-> ;으로 구분(C(C++), Java, C# 등) - 스크립트 언어가 아닌 언어들은 한 번에 실행해야 하는 명령어 뒤에 종결부호가 있음

5.선언형 언어
->알고리즘은 기술하지 않고 문제만 기술하는 언어
->HTML, CSS, XML, LISP, Haskell, PROLOG 등

6.함수형 프로그래밍 언어
->함수가 일급 객체로 취급되는 언어
->함수를 하나의 자료형으로 사용할 수 있고(변수를 생성할 수 있고 매개변수로도 이용할 수 있고 리턴 타입으로도 이용 가능)함수 안에 함수를 생성할 수 있고 함수만 별도로 존재 할 수 있는 언어
->파이썬이 대표적인 함수형 언어
->Scala, Kotlin 등이 JVM 기반의 대표적인 함수형 언어
->JDK 1.8 이후에 추가된 람다와 스트림 API가 자바를 이용해서 함수형 프로그래밍을 구현하기 위한 API 
    - 안드로이드에서 메소드가 1개 뿐인 인터페이스마 추상클래스를 anonymous class를 이용해서 구현하면 
      안드로이드 스튜디오가 코드 최적화를 위해서 람다로 변경합니다.

***객체 지향 용어
1.클래스, 객체, instance
->Class : 유사한 역할을 수행하는 객체들의 모임 - 모형, 사용자 정의 자료형, 아파트나 오피스텔의 모델하우스의 개념
->Object(객체): 프로그램에서 존재하는 모든 것
->Instance(실례, 사례 등 ) : 클래스를 기반으로 생성한 객체

2.속성(attribute, property, field 등) 과 메소드(method)
-> 속성 : 클래스나 객체의 정보를 저장하기 위해서 클래스나 객체가 소유하는 변수 
-> 메소드 : function 이라고도 하는데 한 번에 수행해야 하는 코드의 모임에 이름을 붙여놓은 것으로
            function이 클래스나 객체(Instance)의 소유이면 method라고 하고 소유가가 없으면 function이라고 합니다.
            클래스나 인스턴스가 메소드를 호출하는 것을 메시지를 전송한다고 하기도 합니다.

3.Encapsulation(캡슐화)
-> 동일한 목적을 위해서 사용되는 속성과 메소드를 묶는 작업 - 클래스를 만드는 것
-> 정보 은닉(Information Hiding): 불필요한 부분은 숨기는 작업, 접근 지정자 사용

4. Inheritance(상속)
-> 하위 클래스가 상위 클래스의 모든 것을 물려받는 것
-> 상속을 그림으로 그릴 때 하위클래스에서 상위클래스 방향으로 그립니다.

5. Polymorphism(다형성)
-> 동일한 메시지에 대하여 다르게 반응하는 성질
-> 동일한 코드가 호출하는 객체에 때라 다른 메소드를 호출하는 것
상속과 method overloading(상위 클래스의 메소드와 동일한 원형의 메소드를 하위 클래스에서 다시 정의하는 것 - 메소드 재정의)으로 구현
-> method overloading: 하나의 클래스의 메소드르이 이름은 같고 매개변수의 개수나 자료형이 다른 경우

**프로그래밍 언어
C, Java, Python
1.프로그램이 실행되는 과정
소스코드(프로그래밍 언어에 맞게 작성한 코드 - 인간이 알아보는 코드)작성 -> 
Complie(번역 - 프로그램을 실행할 수 있는 운영체제나 가상머신이 이해하는 코드로 C언어의 경우는 obj 파일을 만들고 Java는 class를 생성, 여기서 에러가 발생하면 문법이 틀린 것입니다.)
-> Build(만들어진 코드를 실행할 수 있는 코드로 변경 - 스타트업 코드나 로딩 순서나 이런 것들을 확인, 여기서 에러가 발생하면 클래스가 없거나 스타트업 코드가 없거나 2개 이상인 경우)
->Loading(프로그램을 실행할 수 있도록 Main Memory에 코드를 올리는 작업)
->Run(실행)

2.프로그래밍을 하기 위해서 필요한 도구
    1)컴파일러(필수)
        ->C언어도 C compiler - Mac이나 Linux, Unix 에서는 내장
        C언어는 Unix를 만들기 위해서 등장한 언어

        Unix의 상용화에 반대해서 만들어진 운영체제 - 리
        Unix에 GUI를 입힌 운영체제 - Mac OS X, iOS
        Linux 에 GUI를 입힌 운영체제 - 안드로이드
        Mac OS X을 이용해서 자신들의 C 언어로 코드를 입힌 운영체제 - MS Windows

        ->Java는 JDK(자바 개발 도구) - 필수, 실행을 하려면 JRE(자바 실행 도구 - JVM이라고 하기도 합니다)도 설치
    
        ->Python은 Python Compiler 

    2)IDE(통합 개발 도구 - 개발의 전 과정을 할 수 있도록 도와주는 프로그램)
    ->선택: 없어도 프로그래밍을 못하는 것이 아니고 불편합니다.
    ->C: Mac에서는 X-code를 가지  ㅇ   고 할 수 있음, Windows 에서는 Visual C++(python하는 경우는 디스크 공간에 여유가 있으면 Visual Studio를 설치해 보세요 - python이나  R은 Linux에서 시작되었고 대부분의 핵심 코드가 C&C++입니다. python의 많은 패키지들이 C&C++로 만들어진 경우가 많은데 윈도우즈 용은 Visual C++로 만들어서 Visual C++ 재배포 패키지를 설치해야 제대로 다운로드 받아서 실행된 )
        과 code block 등이 있음

codeblocks 다운로드 및 설치 : www.codeblocks.org 에서 다운로드 - codeblocks-20.03mingw-setup.exe 을 받아서 설치되었습니다
-> Java는 Oracle 에서 JDK를 다운로드 받거나 Open JDK를 받아서 설치한 후 IDE를 설치
JAVA IDE:Ecelips, Inteli J(무료 버전으로 웹 프로그래밍을 제외한 것은 전부 가능, 학생은 코드 등록하면 상업용 1녀 동안 무료, 코드 센스 기능이 우수하고 빌드 오류가 거의 없고 매개변수에 네이밍을 추가해 줍니다. 코드를 알아보기가 쉽습니다.)
 
 되도록이면 path에
 path라는 환경변수는 명령어를 경로없이 실행할 수 있도록 해주는 환경변수
 python이나 R 공부하시는 분은 반드시 path설정을 하세요
 ->python 의 IDE 




..
python 이나 anaconda 설치할 때 path 명령어가 있는 디렉터리를 추가할 것인지 옵션이 나오는데 
체크를 해주는 게 작업을 할 때 편함
 pip install했는데 코딩할 때 module이 없다고 나오는 경우는 파이썬이 2개 이상 설치되어 다른 경로에 설치된 것입니다.
 
 -> 최근에는 클라우드 환경에서 제공하는 IDE도 있습니다.
 대표적인 것이 Google colab인데 여기서 python을 설치없이 실행해볼 수 있습니다.
 최근의 코딩 테스트나 빅데이터 분석기사나 데이터 분석 전문가 시험에서는 별도의 IDE를 설치하지 않고 클라우드 환경의 IDE를 제공합니다. 


3. Code Blocks 설치 후 해주어야 할 일
[Setting] [Compiler]를 선택한 후  ToolChain Excutables 탭에서 Auto Detect를 한번 눌러주고 다시 실행하면 됩니다.

4. Java 설치 후  

1)Java가 설치된 디렉토리에서 jdk디렉토리의 bin이라는 디렉토리의 경로를 복사
 
2)탐색기에서 [내PC]를 선택하고 마우스 오른쪽을 눌러서 [속성]을 선택한 후 
[고급 시스탬]


//1,1,2,3,5,8.13.21.34,55
//첫번째와 두번째는 무조건 1
//
int n = 9
sum=1
x=3
int n1=1
int n2=1
 while(x<=n){
     //2개의 합을 구함
     sum = n1+n2;
     //다음 항의 값을 이전 항에 대입
     n1=n2;
     n2=sum;
     x = x+1;
 }
 print(sum);
 